{"ast":null,"code":"import { GET_CURRENT_USER, SET_CURRENT_USER, GET_ERRORS, API_URL } from '../constants/constants';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport setHeader from '../../helpers/setHeader';\nimport { toast } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { getCartInfo } from './CartActions';\nconst token = localStorage.getItem('token');\nconst headers = {\n  Authorization: `Bearer ${token}`\n};\nexport const setCurrentUser = user => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: user\n  };\n};\nexport const getCurrentUser = () => {\n  const token = localStorage.getItem('token');\n  setHeader(token);\n  const headers = {\n    Authorization: `Bearer ${token}`\n  };\n  return dispatch => {\n    axios({\n      method: \"GET\",\n      headers: headers,\n      url: `${API_URL}/api/auth/info`\n    }).then(res => {\n      dispatch({\n        type: GET_CURRENT_USER,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const getUserLogin = () => {\n  const token = localStorage.getItem('token');\n  setHeader(token);\n  const headers = {\n    Authorization: `Bearer ${token}`\n  };\n  return axios({\n    method: \"GET\",\n    headers: headers,\n    url: `${API_URL}/api/auth/info`\n  });\n};\nexport const getErrors = errors => {\n  return {\n    type: GET_ERRORS,\n    payload: errors\n  };\n};\nexport const login = (user, history) => {\n  const {\n    username,\n    password\n  } = user;\n  return dispatch => {\n    axios({\n      method: 'POST',\n      url: `${API_URL}/api/auth/login`,\n      data: {\n        username,\n        password\n      }\n    }).then(res => {\n      const token = res.data.token;\n      const username = res.data.username;\n      localStorage.setItem('token', token);\n      localStorage.setItem('username', username);\n      const decoded = jwtDecode(token);\n      dispatch(setCurrentUser(decoded));\n      dispatch(getCartInfo());\n      history.goBack();\n    }).catch(err => {\n      toast.error('Tài khoản hoặc mật khẩu không chính xác!', {\n        position: \"bottom-center\",\n        theme: 'dark',\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      console.log(err);\n    });\n  };\n};\nexport const register = (data, history) => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      data: JSON.stringify(data),\n      url: `${API_URL}/api/auth/register`,\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(res => {\n      toast.success(res.data.message, {\n        position: \"bottom-center\",\n        autoClose: 1500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      history.push(\"/login\");\n    }).catch(err => {\n      if (err) {\n        toast.error(err.response.data.message, {\n          position: \"bottom-center\",\n          theme: 'dark',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n        dispatch(getErrors(err.response.data.message));\n      }\n    });\n  };\n};\nexport const updateInfo = data => {\n  return axios({\n    method: \"PUT\",\n    url: `${API_URL}/api/auth/update-info`,\n    headers: headers,\n    data: data\n  });\n};\nexport const updatePassword = data => {\n  return axios({\n    method: \"PUT\",\n    url: `${API_URL}/api/auth/update-password`,\n    headers: headers,\n    data: data\n  });\n};\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    dispatch(setCurrentUser({}));\n    window.location.reload();\n    setHeader();\n  };\n};","map":{"version":3,"names":["GET_CURRENT_USER","SET_CURRENT_USER","GET_ERRORS","API_URL","axios","jwtDecode","setHeader","toast","getCartInfo","token","localStorage","getItem","headers","Authorization","setCurrentUser","user","type","payload","getCurrentUser","dispatch","method","url","then","res","data","catch","err","console","log","getUserLogin","getErrors","errors","login","history","username","password","setItem","decoded","goBack","error","position","theme","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","register","JSON","stringify","success","message","push","response","updateInfo","updatePassword","logout","removeItem","window","location","reload"],"sources":["D:/TutuFinal/tutuClient/src/actions/services/UserActions.js"],"sourcesContent":["import {\r\n    GET_CURRENT_USER, SET_CURRENT_USER, GET_ERRORS, API_URL\r\n} from '../constants/constants'\r\n\r\nimport axios from 'axios'\r\nimport jwtDecode from 'jwt-decode'\r\nimport setHeader from '../../helpers/setHeader'\r\nimport { toast } from 'react-toastify'\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getCartInfo } from './CartActions'\r\nconst token = localStorage.getItem('token');\r\nconst headers = { Authorization: `Bearer ${token}` }\r\n\r\nexport const setCurrentUser = (user) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n    const token = localStorage.getItem('token');\r\n    setHeader(token);\r\n    const headers = { Authorization: `Bearer ${token}` }\r\n    return dispatch => {\r\n        axios({\r\n            method: \"GET\",\r\n            headers: headers,\r\n            url: `${API_URL}/api/auth/info`\r\n        })\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: GET_CURRENT_USER,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserLogin = () => {\r\n    const token = localStorage.getItem('token');\r\n    setHeader(token);\r\n    const headers = { Authorization: `Bearer ${token}` }\r\n    return axios({\r\n        method: \"GET\",\r\n        headers: headers,\r\n        url: `${API_URL}/api/auth/info`\r\n    })\r\n}\r\n\r\n\r\nexport const getErrors = (errors) => {\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: errors\r\n    }\r\n}\r\n\r\nexport const login = (user, history) => {\r\n    const { username, password } = user;\r\n    return dispatch => {\r\n        axios({\r\n            method: 'POST',\r\n            url: `${API_URL}/api/auth/login`,\r\n            data: { username, password }\r\n        })\r\n            .then((res) => {\r\n                const token = res.data.token;\r\n                const username = res.data.username;\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('username', username);\r\n                const decoded = jwtDecode(token);\r\n                dispatch(setCurrentUser(decoded));\r\n                dispatch(getCartInfo());\r\n                history.goBack();\r\n            })\r\n            .catch(err => {\r\n                toast.error('Tài khoản hoặc mật khẩu không chính xác!', {\r\n                    position: \"bottom-center\",\r\n                    theme: 'dark',\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const register = (data, history) => {\r\n    return dispatch => {\r\n        axios({\r\n            method: \"POST\",\r\n            data: JSON.stringify(data),\r\n            url: `${API_URL}/api/auth/register`,\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((res) => {\r\n                toast.success(res.data.message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1500,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                history.push(\"/login\")\r\n            })\r\n            .catch((err) => {\r\n                if (err) {\r\n                    toast.error(err.response.data.message, {\r\n                        position: \"bottom-center\",\r\n                        theme: 'dark',\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                    dispatch(getErrors(err.response.data.message))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateInfo = (data) => {\r\n    return axios({\r\n        method: \"PUT\",\r\n        url: `${API_URL}/api/auth/update-info`,\r\n        headers: headers,\r\n        data: data\r\n    })\r\n}\r\n\r\nexport const updatePassword = (data) => {\r\n    return axios({\r\n        method: \"PUT\",\r\n        url: `${API_URL}/api/auth/update-password`,\r\n        headers: headers,\r\n        data: data\r\n    })\r\n}\r\n\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"username\");\r\n        dispatch(setCurrentUser({}));\r\n        window.location.reload();\r\n        setHeader();\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}